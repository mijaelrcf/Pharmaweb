@using Pharmaweb.Extensions;
@using Pharmaweb.Models;
@model Pharmaweb.Models.IngresoProductoModels

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h4 class="modal-title">Crear</h4>
</div>

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="modal-body">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(m => Model.SucursalId, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.SucursalId, Model.lstSucursal, new { @class = "form-control required" })
                    <div>
                        @Html.ValidationMessageFor(m => m.SucursalId)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.CatTipoIngreso, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.CatTipoIngreso, Model.lstCatTipoIngreso, "-- Seleccionar --", new { @class = "form-control required" })
                    <div>
                        @Html.ValidationMessageFor(m => m.CatTipoIngreso)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.NroFactura, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.NroFactura, new { @class = "form-control required" })
                    <div>
                        @Html.ValidationMessageFor(m => m.NroFactura)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.Observacion, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Observacion, new { @class = "form-control required" })  
                    <div>
                        @Html.ValidationMessageFor(m => m.Observacion)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.LaboratorioId, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                   @Html.DropDownListFor(model => model.LaboratorioId, Model.lstLaboratorio, "-- Seleccionar --", new { @class = "form-control required", @id = "ddlLaboratorio" })
                    <div>
                        @Html.ValidationMessageFor(m => m.LaboratorioId)
                    </div>
                </div>
            </div>

            <div>
                <em data-bind="validationMessage: detalle"></em>
            </div>
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Cantidad de Paquetes</th>
                            <th>Cantidad de Unidades</th>
                            <th>Fecha Vencimiento</th>
                            <th>
                                <button class="btn btn-default" data-bind="click: agregarDetalle">Agregar Detalle</button>
                            </th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: detalle">
                        <tr>
                            <td>
                                <select class="form-control required" required="required" data-bind="value: productoId, options: window.productos, optionsText: 'NombreProducto', optionsValue: 'ProductoId', attr: { name: 'Detalle[' + $index() + '].ProductoId' }"></select>
                                <em data-bind="validationMessage: productoId"></em>
                            </td>
                            <td>
                                <input class="form-control required" type="number" required="required" min="0" max="999999999" data-bind="value: cantidadPaquetes, attr: { name: 'Detalle[' + $index() + '].CantidadPaquetes' }" />
                                <em data-bind="validationMessage: cantidadPaquetes"></em>
                            </td>
                            <td>
                                <input class="form-control required" type="number" required="required" min="0" max="999999999" data-bind="value: cantidadUnidades, attr: { name: 'Detalle[' + $index() + '].CantidadUnidades' }" />
                                <em data-bind="validationMessage: cantidadUnidades"></em>
                            </td>
                            <td>
                                <input class="form-control required" type="datetime" required="required" data-bind="value: fechaVencimiento, attr: { name: 'Detalle[' + $index() + '].FechaVencimiento' }" />
                                <em data-bind="validationMessage: fechaVencimiento"></em>
                            </td>
                            <td>
                                <button class="btn btn-default" data-bind="click: $root.eliminarDetalle">Eliminar</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            @*<p>
                <input type="submit" value="Crear" data-bind="enable: canCreate()" />
            </p>*@
        </div>
    </div>
    
    <div class="modal-footer">
        <span id="progress" class="text-center" style="display: none;">
            <img src="/images/wait.gif" alt="wait" />
            Procesando..
        </span>

        <input class="btn btn-success" type="submit" value="Guardar" data-bind="enable: canCreate()" />
        <button class="btn btn-warning" data-dismiss="modal">Cancelar</button>
    </div>
}

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script src="~/Scripts/knockout-2.2.1.js"></script>
<script src="~/Scripts/knockout.validation.js"></script>
<script src="~/Scripts/IngresoProductoCreate.js"></script>

<script>
    // catálogo de productos que se utiliza para llenar el <select /> de productos de cada detalle
    var productos = JSON.parse('@Html.Raw(Json.Encode(ViewBag.Productos))');

    // viewModel con el que haremos el binding de nuestra vista.
    var viewModel = new facturaViewModel();

    // inicializamos la validación de knockout.
    ko.validation.init({ insertMessages: false, parseInputAttributes: true });

    // aplicamos el viewModel a nuestra vista.
    ko.applyBindings(viewModel);
</script>
